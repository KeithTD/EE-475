# Hello World Example
#
# Welcome to the MaixPy IDE!
# 1. Conenct board to computer
# 2. Select board at the top of MaixPy IDE: `tools->Select Board`
# 3. Click the connect buttion below to connect board
# 4. Click on the green run arrow button below to run the script!

import sensor, image, time, lcd
from fpioa_manager import fm
from machine import UART
from board import board_info
import KPU as kpu

#lcd.init(freq=15000000)
#lcd.rotation(2)
#sensor.reset()
#sensor.set_pixformat(sensor.RGB565)
#sensor.set_framesize(sensor.QVGA)
#sensor.skip_frames(time = 2000)

lcd.init()
# Reset sensor
sensor.reset()
# Sensor settings
sensor.set_contrast(1)
sensor.set_gainceiling(16)
sensor.set_framesize(sensor.QVGA)
sensor.set_pixformat(sensor.RGB565)
sensor.set_windowing((128, 128))
sensor.set_vflip(1)
sensor.run(1)
sensor.skip_frames(time = 2000)
#LCD setup
lcd.direction(lcd.YX_RLDU)
lcd.clear()
lcd.draw_string(100,96,"MobileNet Demo")
lcd.draw_string(100,112,"Loading labels...")
#labels = ['Eric', 'Peter', 'Keith', 'Ben','Trump']
labels = ["daisy", "dandelion", "roses", "sunflowers", "tulips"]
task = kpu.load("/sd/kmodel/flowers.kmodel")
clock = time.clock()
lcd.clear()

fm.register(board_info.PIN9, fm.fpioa.UART1_TX, force=True)
fm.register(board_info.PIN10, fm.fpioa.UART1_RX, force=True)
fm.register(board_info.PIN15, fm.fpioa.UART2_TX, force=True)
fm.register(board_info.PIN17, fm.fpioa.UART2_RX, force=True)
uart1 = UART(UART.UART1, 115200,8,0,0, timeout=1000, read_buf_len=4096)
uart2 = UART(UART.UART2, 115200,8,0,0, timeout=1000, read_buf_len=4096)

clock = time.clock()
faceDetect = 0
checkForDay = 0
user = 'k'
tim1 = tim1 = time.ticks_ms()

face_cascade = image.HaarCascade("frontalface", stages=25)
eyes_cascade = image.HaarCascade("eye", stages=24)
tim = time.ticks_ms()
faceDetected = False

while(True):
    #clock.tick()
    #img = sensor.snapshot()
    #lcd.display(img)

    # Capture snapshot
    img = sensor.snapshot()

    objects = img.find_features(face_cascade, threshold=0.5, scale_factor=1.5)

    # drawing on lcd
    for face in objects:
        faceDetected = True
        img.draw_rectangle(face)
        eyes = img.find_features(eyes_cascade, threshold=0.5, scale_factor=1.2, roi=face)
        for e in eyes:
            img.draw_rectangle(e)
    lcd.display(img)

    # face recog
    if faceDetected:
        #takes 6.5 sec
        fcount = [0] * 5
        for i in range(100):
            time.sleep(0.01)
            img2 = sensor.snapshot()
            clock.tick()
            fmap = kpu.forward(task, img2)
            fps=clock.fps()
            plist=fmap[:]
            pmax=max(plist)
            max_index=plist.index(pmax)
            #a = lcd.display(img2, oft=(96,56))
            #a = lcd.display(img2, oft=(48,0))
            lcd.display(img2)
            lcd.draw_string(0, 224, "%.2f:%s                            "%(pmax, labels[max_index].strip()))
            print(pmax)
            curr = plist.index(max(plist))
            fcount[curr] = fcount[curr] + 1


        # write to uart
        if labels[fcount.index(max(fcount))] == 'A':
            result = "error"
        else:
            result = labels[fcount.index(max(fcount))]

        print("result:")
        print(result)
        print('Restarting...')
        #if result == 'Peter':
        #    uart2.write("1tk")
        #    uart1.write("b")
        #uart2.write("1tk")
        if result == "dandelion":
            user = 'k'
        elif result == "roses":
            user = 'j'
        elif result == "tulips":
            user = 'g'
        elif result == "daisy":
            user = 'r'
        uart1.write("b")
        lcd.draw_string(100,0,"Final result:" + result)
        #time.sleep(5)
        print('Ready for rescan')
        faceDetected = False

    if faceDetect:
        uart1.write("b")
        faceDetect = 0
    if uart1.any():
        entry = uart1.read()
        entry = entry.decode('utf-8')
        if entry == 'x0':
            entry = '1m' + user
        if entry == 'x1':
            entry = '1t' + user
        if entry == 'x2':
            entry = '1w' + user
        if entry == 'x3':
            entry = '1r' + user
        if entry == 'x4':
            entry = '1f' + user
        if entry == 'x5':
            entry = '1s' + user
        if entry == 'x6':
            entry = '1n' + user
        print("entry:")
        print(entry)
        uart2.write(entry)

    if uart2.any():
        entry1 = uart2.read()
        entry1 = entry1.decode('utf-8')
        print("entry1:")
        print(entry1)
        if entry1 == "10":
            uart1.write(bytes([10]))
        if entry1 == "11":
            uart1.write(bytes([11]))
            while uart2.any() < 12:
                1
            entry2 = uart2.read()
            entry2 = entry2.decode('utf-8')
            print("entry2(11):")
            print(entry2)
            uart1.write(entry2)
        if entry1 == "12":
            uart1.write(bytes([12]))
            while uart2.any() < 12:
                1
            entry2 = uart2.read()
            entry2 = entry2.decode('utf-8')
            print("entry2(12):")
            print(entry2)
            uart1.write(entry2)
        if entry1 == "13":
            uart1.write(bytes([13]))
            while uart2.any() < 4:
                1
            entry2 = uart2.read()
            entry2 = entry2.decode('utf-8')
            print("entry2(13):")
            print(entry2)
            uart1.write(entry2)
        if entry1 == "14":
            uart1.write(bytes([14]))
            while uart2.any() == 0:
                1
            entry2 = uart2.read(1)
            entry2 = entry2.decode('utf-8')
            print("entry2(20):")
            print(entry2)
            uart1.write(entry2)
            while uart2.any() < int(entry2)*4:
                1
            entry3 = uart2.read()
            entry3 = entry3.decode('utf-8')
            print("entry3(20):")
            print(entry3)
            uart1.write(entry3)
        if entry1 == "16":
            uart1.write(bytes([16]))
        if entry1 == "17":
            uart1.write(bytes([17]))
        if entry1 == "18":
            uart1.write(bytes([18]))
        if entry1 == "20":
            uart1.write(bytes([20]))
            while uart2.any() == 0:
                1
            entry2 = uart2.read(1)
            entry2 = entry2.decode('utf-8')
            print("entry2(20):")
            print(entry2)
            uart1.write(entry2)
            if int(entry2) > 0:
                while uart2.any() < int(entry2)*12:
                    1
                entry3 = uart2.read()
                entry3 = entry3.decode('utf-8')
                print("entry3(20):")
                print(entry3)
                uart1.write(entry3)
